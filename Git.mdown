# GITHUB DESDE LA TERMINAL

Lo primero que debemos hacer es "vincular" nuestra cuenta de GitHub con nuestro ordenador. Para ello:

`git config --global user.email "tavoibrahim@gmail.com"`

y luego:

`git config user.name "TavoIbrahim"`

## Hacer cambios, ordenador --> Nuestro GitHub

En este caso, voy a clonar el repositorio BioinfinvRepro que vive en mi GitHub (En realidad es un fork, el original vive en la cuenta de [AliciaMsst](https://github.com/AliciaMstt)). Para ello, escribiré:

`git clone https://github.com/TavoIbrahim/BioinfinvRepro.git`

Es necesario que nuestro WD corresponda a BioinfinvRepro, así que:

`cd BioinfinvRepro`

A partir de este momento, los comandos que nos será útiles son: 

`git status`

que nos permitirá comprobar nuestra situación (si hay archivos o cambios que han quedado pendientes subir/commit);

`git add`

que agregará los cambios (archivos, directorios, etc.) a git. Por ejemplo:

`git add ejemplo.txt`

Al realizar algún cambio, es conveniente que éstos vayan comentados, por lo que podemos utilizar: 

`git commit -m`. Por ejemplo, 

`git commit -m ejemplo.txt`

Finalmente, `git push` "empuja" los cambios a nuestro GitHub. `git push` sólo es útil para subir cambios a NUESTRA CUENTA GitHub. Para "empujar cambios" a otras cuentas, se requerirá realizar un `pull request`.

# Hacer cambios GitHub ---> Ordenador (Sincronizar)

Para actualizar (sincronizar) la copia del repositorio que vive en nuestro ordenador con el repositorio en GitHub (El original, el que vive en Internet), hay que escribir:

`git remote -v` 

para verificar la configuración remota de nuestra copia. Y:

`git remote add upstream https://github.com/TavoIbrahim/BioinfinvRepro.git`

para actualizar nuestra copia en el ordenador con el repo original que vive en línea. Ojo, ésto sólo servirá si el repo original esta en nuestro GitHub (osea que no funcionará, por ejemplo, con el repo de Alicia).
