# GitHub y Git desde la terminal

Lo primero que debemos hacer es "vincular" nuestra cuenta de GitHub con nuestro ordenador. Para ello:

`git config --global user.email "tavoibrahim@gmail.com"`

y luego:

`git config user.name "TavoIbrahim"`

## Fork

Hacer un fork implica copiar un repositorio. La idea de un fork es tener un punto de partida para proponer cambios y/o desarrollar nuevas ideas, SIN realizar cambios al repositorio original.

Los pasos son relativamente sencillos:

**1)** Hacer el fork del repositorio en GitHub con un simple click

![alt text](https://github.com/TavoIbrahim/Git/blob/master/Captura%20de%20pantalla%20de%202018-04-17%2013-53-45.png)

Aparecerá algo así:

![alt text](https://github.com/TavoIbrahim/Git/blob/master/Captura%20de%20pantalla%20de%202018-04-17%2009-01-31.png)

**2)** Realizas los cambios necesarios

**3)** Pull request, es decir, propones tus cambios

## Hacer cambios Ordenador --> Nuestro GitHub

En este caso, vamos a copiar (descargar) el repositorio BioinfinvRepro que vive en mi [GitHub](https://github.com/TavoIbrahim) a algún lugar del ordenador (En realidad, este repo es un **fork**, el original vive en la cuenta de [Alicia Mastretta](https://github.com/AliciaMstt)). Para ello, hay que escribir:

`git clone https://github.com/TavoIbrahim/BioinfinvRepro.git`

Es necesario que nuestro WD corresponda a BioinfinvRepro, así que:

`cd BioinfinvRepro`

A partir de este momento, los comandos que nos será útiles son: 

`git status`

que nos permitirá comprobar nuestra situación (si hay archivos o cambios que han quedado pendientes subir/commit);

`git add`

que agregará los cambios (archivos, directorios, etc.) a git (e.g., `git add ejemplo.txt`) 

`git commit -m`

que permite realizar comentarios a los cambios hechos (e.g., `git commit -m "agregar archivo ejemplo"`) 

`git push origin master` 

que "empuja" los cambios a nuestro GitHub. 

`git push origin master` sólo es útil para subir cambios a NUESTRA CUENTA GitHub. Para empujar cambios a otras cuentas, se requerirá realizar un **pull request**.

## Sincronizar un repositorio con una cuenta GitHub (o crear un remote)

Para sincronizar la copia del repositorio que ya descargamos y que vive en nuestro ordenador, con el código guardado en GitHub (ya sea un *fork* o el original), hay que crear un *remote* o un vínculo. 

Vamos a descargar el repositorio Ozono, que vive en la cuenta de [Vero](https://github.com/VeroIarrachtai) y, estando dentro del directorio, escribimos

`git remote -v` 

Esta línea nos sirve para verificar el *origin* del repositorio que descargamos. En este caso el origin debe ser la URL al código de Vero. 

Puede ser de nuestro interes sincronizar el repo de nuestro ordenador con un fork de Ozono (que vive en GitHub y que contiene nuestros cambios) y no directamente con la versión original. En este caso, es necesario cambiar el origin de Ozono a un fork del mismo que vive en mi GitHub. Ésto lo vamos a lograr con:  

`git remote add upstream https://github.com/TavoIbrahim/Ozono.git`

para actualizar la copia que tenemos en el ordenador con el repositorio que vive en línea (en GitHub). 

Ojo, ésto sólo servirá si el repo original esta en nuestro GitHub (osea que no funcionará, por ejemplo, si queremos actualizar nuestra copia de BioinfinvRepro con el repo original, que vive en el GitHub de Alicia. Para actualizar la copia de BioinfinvRepro que vive en tu ordenador, utiliza `git pull`).


